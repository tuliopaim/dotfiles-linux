---
- name: Install and configure neovim
  vars:
    neovim_url: https://github.com/neovim/neovim/releases/download/stable/nvim.appimage

  block:
    - name: Check if Neovim AppImage is downloaded
      stat:
        path: "{{ share }}/nvim.appimage"
      register: nvim_appimage

    - name: Download and install Neovim stable via AppImage
      become: yes
      get_url:
        url: "{{ neovim_url }}"
        dest: "{{ ansible_user_dir }}"
        mode: 0755
      when: not nvim_appimage.stat.exists

    - name: Extract, move, set permissions and symlink Neovim if not already done
      block:
        - name: Check if Neovim is extracted
          stat:
            path: "{{ share }}/squashfs-root"
          register: nvim_extracted

        - name: Extract Neovim stable from AppImage
          command: "{{ ansible_user_dir }}/nvim.appimage --appimage-extract"
          become: yes
          args:
            chdir: "{{ ansible_user_dir }}"
          when: not nvim_extracted.stat.exists

        - name: Ensure /opt/nvim directory exists and has correct permissions for developer group
          become: yes
          ansible.builtin.file:
            path: /opt/nvim
            state: directory
            mode: '0775'
            group: developer
            recurse: yes 

        - name: Move Neovim stable
          become: yes
          ansible.builtin.shell: "mv {{ ansible_user_dir }}/squashfs-root/* /usr/local/bin/"
          when: not nvim_extracted.stat.exists

        - name: Set executable permissions for Neovim binary
          ansible.builtin.file:
            path: /usr/local/bin/nvim
            mode: "u+x,g+x,o+x"
            group: developer
            state: file
          become: yes
          when: not nvim_extracted.stat.exists

    - name: Set Neovim as default Git editor for each user
      become: yes
      become_user: "{{ item }}"
      ansible.builtin.shell:
        cmd: git config --global core.editor "nvim"
      loop: "{{ users }}"
